#include <iostream>

// 내 방식과 다른 점 : 
// 나는 i 번째 행의 제일 끝 숫자를 구한 후, 그 숫자까지 i 개가 되는 시작 숫자를 찾아내었음. 끝 숫자 - i + 1.
// 그렇지만, 생각을 조금만 더 해보면, i 번째 열의 시작 숫자는 i-1번째 열의 끝 숫자에 1을 더하면 됨.
// i-1번째 끝 숫자는 공식으로 쉽게 알 수 있고, i번째 끝 숫자 역시 공식에 대입하면 쉽게 알 수 있음. 
// 즉, 
// 시작 숫자 : i-1번째 열 끝 숫자 + 1
// 끝 숫자 : i번재 열 끝 숫자
// 또 정 안되면 그 숫자에 어떤 수를 더해서 i개가 되는 것은 쉽게 찾을 수 있음. 

int main() {
    int n;
    std::cout << "숫자를 입력하세요: ";
    std::cin >> n;

    // 행(row)을 제어하는 바깥쪽 루프
    for (int i = 1; i <= n; i++) {
        // 1. i행의 시작과 끝 숫자를 공식으로 계산
        int start_num = ((i - 1) * i / 2) + 1; 
        int end_num = i * (i + 1) / 2;

        // 2. 계산된 시작~끝 범위로 안쪽 루프 실행
        for (int j = start_num; j <= end_num; j++) {
            std::cout << j << " ";
        }
        std::cout << std::endl;
    }

    return 0;
}